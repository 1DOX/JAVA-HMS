package hms_Reservation;


import hms_Main.hmsGUI;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;
import hms_ETC.BillCard;
import hms_ETC.BillCash;

public class hmsCheckinF extends hmsDB_Booking {

    boolean isguarantee = false;
    boolean isPay = false;
    String payType = null;
    String type = null;
    int count = 0;

    public void roomCostz(int a) {
        dbLoad();
        ArrayList<hmsROOM> cost = roomCost(a);
        DefaultTableModel model = (DefaultTableModel) RoomCostTable.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < cost.size(); i++) {
            row[0] = cost.get(i).getroom_num();
            row[1] = cost.get(i).getCost();
            row[2] = cost.get(i).getChangeCost();
            row[3] = cost.get(i).getRate_desc();
            model.addRow(row);
        }
        dbClose();
    }

    public void card_num() {
        cardField1.setEnabled(false);
        cardField2.setEnabled(false);
        cardField3.setEnabled(false);
        cardField4.setEnabled(false);
    }

    public void reset() {
        dispose();
        new hmsCheckinF().setVisible(true);
    }

    public hmsCheckinF() {
        initComponents();
        Phone1Field.setEnabled(false);
        card_num();
        cardField1.setEnabled(false);
        cardField2.setEnabled(false);
        cardField2.setEnabled(false);
        cardField4.setEnabled(false);

        buttonGroup1.add(GuaranteeYes);
        buttonGroup1.add(GuaranteeNo);
        buttonGroup2.add(PayTypeCard);
        buttonGroup2.add(PayTypeCash);
        buttonGroup2.add(PayTypeNo);

        type = "reservation";
    }

    hmsCheckinF(int a) {
        initComponents();
        Phone1Field.setEnabled(false);
        card_num();
        buttonGroup1.add(GuaranteeYes);
        buttonGroup1.add(GuaranteeNo);
        buttonGroup2.add(PayTypeCard);
        buttonGroup2.add(PayTypeCash);
        buttonGroup2.add(PayTypeNo);

        type = "booking";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        NameField = new javax.swing.JTextField();
        NameLabel = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        AddressField = new javax.swing.JTextField();
        PhoneLabel = new javax.swing.JLabel();
        MemberLabel = new javax.swing.JLabel();
        MemberField = new javax.swing.JTextField();
        GuaranteeLabel = new javax.swing.JLabel();
        PayTypeLabel = new javax.swing.JLabel();
        CardNumLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        feedbackField = new javax.swing.JTextField();
        roomLabel = new javax.swing.JLabel();
        roomField = new javax.swing.JTextField();
        ReserButton = new javax.swing.JButton();
        CIDateLabel = new javax.swing.JLabel();
        CODateLabel = new javax.swing.JLabel();
        GuaranteeYes = new javax.swing.JRadioButton();
        GuaranteeNo = new javax.swing.JRadioButton();
        PayTypeCard = new javax.swing.JRadioButton();
        PayTypeCash = new javax.swing.JRadioButton();
        PayTypeNo = new javax.swing.JRadioButton();
        CIDateChooser = new com.toedter.calendar.JDateChooser();
        CODateChooser = new com.toedter.calendar.JDateChooser();
        GoBackButton = new javax.swing.JButton();
        CITimeComboBox = new javax.swing.JComboBox<>();
        COTimeComboBox = new javax.swing.JComboBox<>();
        CITimeLabel = new javax.swing.JLabel();
        COTimeLabel = new javax.swing.JLabel();
        FloorComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        RoomCostTable = new javax.swing.JTable();
        cardField1 = new javax.swing.JTextField();
        cardField2 = new javax.swing.JTextField();
        cardField3 = new javax.swing.JTextField();
        cardField4 = new javax.swing.JTextField();
        Phone1Field = new javax.swing.JTextField();
        Phone2Field = new javax.swing.JTextField();
        Phone3Field = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("예약");

        NameField.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameFieldActionPerformed(evt);
            }
        });

        NameLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        NameLabel.setText("* 성함");

        AddressLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        AddressLabel.setText("* 주소");

        AddressField.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        AddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressFieldActionPerformed(evt);
            }
        });

        PhoneLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        PhoneLabel.setText("* 전화번호");

        MemberLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        MemberLabel.setText("* 인원");

        MemberField.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        MemberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberFieldActionPerformed(evt);
            }
        });

        GuaranteeLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        GuaranteeLabel.setText("보증");

        PayTypeLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        PayTypeLabel.setText("* 결제 수단");

        CardNumLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        CardNumLabel.setText("카드번호");

        feedbackLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        feedbackLabel.setText("특별 요청");

        feedbackField.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        feedbackField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackFieldActionPerformed(evt);
            }
        });

        roomLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        roomLabel.setText("객실 번호");

        roomField.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        roomField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomFieldActionPerformed(evt);
            }
        });

        ReserButton.setBackground(new java.awt.Color(70, 70, 70));
        ReserButton.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        ReserButton.setForeground(new java.awt.Color(255, 255, 255));
        ReserButton.setText("완료");
        ReserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReserButtonActionPerformed(evt);
            }
        });

        CIDateLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        CIDateLabel.setText("체크인 날짜");

        CODateLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        CODateLabel.setText("체크아웃 날짜");

        GuaranteeYes.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        GuaranteeYes.setText("예");
        GuaranteeYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuaranteeYesActionPerformed(evt);
            }
        });

        GuaranteeNo.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        GuaranteeNo.setText("아니오");
        GuaranteeNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuaranteeNoActionPerformed(evt);
            }
        });

        PayTypeCard.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        PayTypeCard.setText("카드");
        PayTypeCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayTypeCardActionPerformed(evt);
            }
        });

        PayTypeCash.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        PayTypeCash.setText("현금");
        PayTypeCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayTypeCashActionPerformed(evt);
            }
        });

        PayTypeNo.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        PayTypeNo.setText("미결제");
        PayTypeNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayTypeNoActionPerformed(evt);
            }
        });

        GoBackButton.setBackground(new java.awt.Color(113, 113, 113));
        GoBackButton.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        GoBackButton.setForeground(new java.awt.Color(255, 255, 255));
        GoBackButton.setText("뒤로가기");
        GoBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoBackButtonActionPerformed(evt);
            }
        });

        CITimeComboBox.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        CITimeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15:00", "16:00", "17:00", "18:00~" }));

        COTimeComboBox.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        COTimeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "~07:00", "08:00", "09:00", "10:00", "11:00~", " " }));

        CITimeLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        CITimeLabel.setText("예상체크인시간");

        COTimeLabel.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        COTimeLabel.setText("예상체크아웃시간");

        FloorComboBox.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        FloorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1F", "2F", "3F", "4F", "5F", "6F", "7F", "8F", "9F", "10F" }));
        FloorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FloorComboBoxActionPerformed(evt);
            }
        });

        RoomCostTable.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        RoomCostTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "객실 번호", "기본 가격", "변경된 가격", "변경 사유"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(RoomCostTable);

        cardField1.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N

        cardField2.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N

        cardField3.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N

        cardField4.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N

        Phone1Field.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        Phone1Field.setText("010");

        Phone2Field.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N

        Phone3Field.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("-");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("-");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomLabel)
                            .addComponent(CardNumLabel)
                            .addComponent(PayTypeLabel)
                            .addComponent(CITimeLabel)
                            .addComponent(CODateLabel)
                            .addComponent(CIDateLabel)
                            .addComponent(GuaranteeLabel)
                            .addComponent(MemberLabel)
                            .addComponent(PhoneLabel)
                            .addComponent(AddressLabel)
                            .addComponent(NameLabel)
                            .addComponent(feedbackLabel)
                            .addComponent(COTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feedbackField, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MemberField)
                                    .addComponent(AddressField)
                                    .addComponent(NameField)
                                    .addComponent(CITimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(COTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Phone1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Phone2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Phone3Field, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(GuaranteeYes)
                                        .addGap(18, 18, 18)
                                        .addComponent(GuaranteeNo))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(CODateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                        .addComponent(CIDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(PayTypeCard))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(cardField1)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addComponent(PayTypeCash)
                                                .addGap(9, 9, 9)
                                                .addComponent(PayTypeNo))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cardField2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                                .addGap(1, 1, 1)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                                                .addGap(2, 2, 2)
                                                .addComponent(cardField3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                                .addGap(1, 1, 1)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                                                .addGap(2, 2, 2)
                                                .addComponent(cardField4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))))
                                .addGap(72, 72, 72)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(roomField, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(FloorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(348, 348, 348)
                        .addComponent(GoBackButton)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(ReserButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FloorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GoBackButton))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddressLabel))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Phone1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Phone2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Phone3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneLabel))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MemberLabel)
                            .addComponent(MemberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GuaranteeLabel)
                            .addComponent(GuaranteeYes)
                            .addComponent(GuaranteeNo))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CIDateLabel)
                            .addComponent(CIDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CITimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CITimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CODateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CODateLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(COTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(COTimeLabel))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PayTypeCash)
                            .addComponent(PayTypeNo)
                            .addComponent(PayTypeLabel)
                            .addComponent(PayTypeCard))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CardNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feedbackLabel)
                    .addComponent(feedbackField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReserButton)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameFieldActionPerformed

    private void AddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressFieldActionPerformed

    private void MemberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MemberFieldActionPerformed

    private void feedbackFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbackFieldActionPerformed

    private void roomFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomFieldActionPerformed

    private void ReserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReserButtonActionPerformed
        // 예약 버튼 클릭시
        dbLoad();
        String num;
        var date = new Date();
        var date1 = new Date();

        SimpleDateFormat ft = new SimpleDateFormat("YYYY-MM-dd");
        SimpleDateFormat fm = new SimpleDateFormat("hh:mm:ss");
        String CIdate = null;
        String COdate = null;

        String room = roomField.getText();
        date = CIDateChooser.getDate();
        date1 = CODateChooser.getDate();
        String asd = CITimeComboBox.getSelectedItem().toString();
        String qwe = COTimeComboBox.getSelectedItem().toString();
        CIdate = ft.format(date);
        COdate = ft.format(date1);
        DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        Calendar cal1 = Calendar.getInstance();
        Calendar cal2 = Calendar.getInstance();
        cal1.setTime(date);
        cal2.setTime(date1);
        long mill = (cal1.getTimeInMillis() - cal2.getTimeInMillis());
        long hours = TimeUnit.MILLISECONDS.toHours(mill);
        long days = TimeUnit.HOURS.toDays(hours);
        String diff = String.format("%d", days);
        Date curDate = new Date();
        DateFormat dfs = new SimpleDateFormat("YYYYMMdd");
        String ciDateStr = dfs.format(date);
        //받은 날짜
        String curDateStr = dfs.format(curDate);
        //현재 날짜

        String phone = Phone2Field.getText() + Phone2Field.getText() + Phone3Field.getText();
        String member = MemberField.getText();
        String name = NameField.getText();
        String address = AddressField.getText();

        String feedback = feedbackField.getText();
        boolean room_num = searchROOM_NUM(room);
        int membertest = 0;
        if(!member.isEmpty())
        {
            membertest = Integer.parseInt(member);
        }
        
        String reserNum = null;
        String card_num = cardField1.getText() + "-" + cardField2.getText() + "-" + cardField3.getText() + "-" + cardField4.getText();
        int card_len = card_num.length();

        //오류발생
        //라디오버튼 혹은 콤보박스로 변경
        //+예외처리
        int compare = curDateStr.compareTo(ciDateStr);
        
        if (Integer.parseInt(diff) >= 0 || compare >= 0) {
            JOptionPane.showMessageDialog(this, "날짜를 잘못입력했습니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        }
        else if (room.isEmpty() || phone.isEmpty() || member.isEmpty() || address.isEmpty() || payType.isEmpty()) {
            JOptionPane.showMessageDialog(this, "필수 정보를 입력해주세요.", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        }
        else if (room_num == false) {
            JOptionPane.showMessageDialog(this, "방 번호를 잘못 입력하셨습니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        } else if (nametest(name)) {
            JOptionPane.showMessageDialog(this, "고객명을 잘못 입력하였습니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        } else if (phonetest(phone)) {
            JOptionPane.showMessageDialog(this, "전화번호를 잘못 입력하였습니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        } else if (membertest <= 0 || membertest > 10) {
            JOptionPane.showMessageDialog(this, "입실인원이 해당 방의 최대 입실 인원을 초과하였습니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        } else if (CIdate.equals(null) || COdate.equals(null)) {
            JOptionPane.showMessageDialog(this, " 체크인, 체크아웃 날짜를 확인 후 다시 시도해주세요!", "메세지", JOptionPane.INFORMATION_MESSAGE);
            this.reset();
        } else if (count == 1 && card_len != 19) {
            JOptionPane.showMessageDialog(this, "카드번호를 잘못 입력했습니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
        }  else if (!dateSearch(Integer.parseInt(diff), date, room)) {
            JOptionPane.showMessageDialog(this, "예약할 수 없는 날짜입니다.", "메세지", JOptionPane.INFORMATION_MESSAGE);
        } else {
            phone = Phone1Field.getText() + "-" + Phone2Field.getText() + "-" + Phone3Field.getText();

            reserNum = updateRV(name, address, phone, member, isguarantee, payType, isPay, card_num, feedback, room, CIdate, COdate, asd, qwe);
            for (int i = 0; i < Math.abs(Integer.parseInt(diff)); i++) {
                updateDATE(room, date);
                cal1.add(Calendar.DATE, 1);
                date = cal1.getTime();
            }
            if(isPay)
            {
                if(payType.equals("카드"))
                {
                    dispose();
                    new BillCard(card_num ,room, 0).setVisible(true);
                }
                else if(payType.equals("현금"))
                {
                    dispose();
                    new BillCash(room,0).setVisible(true);
                }
            }
            else
            {
                int roomcost = get_roomcost(room);
                Updateint("reservation", "totalPrice", "room_num",room , roomcost);
                hotelGUI a = new hotelGUI();
                dispose();
                a.setVisible(true);
                    }
            JOptionPane.showMessageDialog(this, "예약이 완료되었습니다. 예약 번호: " + reserNum, "메세지", JOptionPane.INFORMATION_MESSAGE);
           dbClose();
        }
    }//GEN-LAST:event_ReserButtonActionPerformed

    private void GuaranteeYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuaranteeYesActionPerformed
        // TODO add your handling code here:
        count = 1;
        cardField1.setEnabled(true);
        cardField2.setEnabled(true);
        cardField3.setEnabled(true);
        cardField4.setEnabled(true);
        
        isguarantee = true;

    }//GEN-LAST:event_GuaranteeYesActionPerformed

    private void GuaranteeNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuaranteeNoActionPerformed
        // TODO add your handling code here:
        count = 0;
        card_num();
        cardField1.setText(null);
        cardField2.setText(null);
        cardField3.setText(null);
        cardField4.setText(null);
        isguarantee = false;
    }//GEN-LAST:event_GuaranteeNoActionPerformed

    private void PayTypeCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayTypeCardActionPerformed
        // TODO add your handling code here:
        isPay = true;
        payType = "카드";
    }//GEN-LAST:event_PayTypeCardActionPerformed

    private void PayTypeCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayTypeCashActionPerformed
        // TODO add your handling code here: 
        isPay = true;
        payType = "현금";
    }//GEN-LAST:event_PayTypeCashActionPerformed

    private void PayTypeNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayTypeNoActionPerformed
        // TODO add your handling code here:
        isPay = false;
        payType = "미결제";
    }//GEN-LAST:event_PayTypeNoActionPerformed

    private void GoBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoBackButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new hotelGUI().setVisible(true);
    }//GEN-LAST:event_GoBackButtonActionPerformed

    private void FloorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FloorComboBoxActionPerformed
        // TODO add your handling code here:
        RoomCostTable.setModel(new DefaultTableModel(null, new String[]{"객실 번호", "기본 가격", "변경된 가격", "변경된 이유"}));
        int a = FloorComboBox.getSelectedIndex();
        roomCost(a + 1);
    }//GEN-LAST:event_FloorComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressField;
    private javax.swing.JLabel AddressLabel;
    private com.toedter.calendar.JDateChooser CIDateChooser;
    private javax.swing.JLabel CIDateLabel;
    private javax.swing.JComboBox<String> CITimeComboBox;
    private javax.swing.JLabel CITimeLabel;
    private com.toedter.calendar.JDateChooser CODateChooser;
    private javax.swing.JLabel CODateLabel;
    private javax.swing.JComboBox<String> COTimeComboBox;
    private javax.swing.JLabel COTimeLabel;
    private javax.swing.JLabel CardNumLabel;
    private javax.swing.JComboBox<String> FloorComboBox;
    private javax.swing.JButton GoBackButton;
    private javax.swing.JLabel GuaranteeLabel;
    private javax.swing.JRadioButton GuaranteeNo;
    private javax.swing.JRadioButton GuaranteeYes;
    private javax.swing.JTextField MemberField;
    private javax.swing.JLabel MemberLabel;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JRadioButton PayTypeCard;
    private javax.swing.JRadioButton PayTypeCash;
    private javax.swing.JLabel PayTypeLabel;
    private javax.swing.JRadioButton PayTypeNo;
    private javax.swing.JTextField Phone1Field;
    private javax.swing.JTextField Phone2Field;
    private javax.swing.JTextField Phone3Field;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JButton ReserButton;
    private javax.swing.JTable RoomCostTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cardField1;
    private javax.swing.JTextField cardField2;
    private javax.swing.JTextField cardField3;
    private javax.swing.JTextField cardField4;
    private javax.swing.JTextField feedbackField;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField roomField;
    private javax.swing.JLabel roomLabel;
    // End of variables declaration//GEN-END:variables
}
